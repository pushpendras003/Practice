class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        def helper(i,b,n,prices):
            if i>=n:
                return 0
            if dp[i][b]!=-1:
                return dp[i][b]
            if b==0:
                dp[i][b]=max(-prices[i]+helper(i+1,1,n,prices),helper(i+1,0,n,prices))
            if b==1:
                dp[i][b]=max(prices[i]+helper(i+2,0,n,prices),helper(i+1,1,n,prices))
            return dp[i][b]



        n=len(prices)
        dp=[[-1 for _ in range(2)] for _ in range(n)]
        return helper(0,0,n,prices)
