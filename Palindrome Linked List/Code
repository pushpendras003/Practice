# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:  
        fast=head
        slow=head
        while fast and fast.next:
            slow=slow.next
            fast=fast.next.next
        if fast!=None:
            slow=slow.next
        curr=slow
        nxt=None
        prev=None
        while curr:
            nxt=curr.next
            curr.next=prev
            prev=curr
            curr=nxt
        fast=head
        while prev:
            if prev.val!=fast.val:
                return False
            prev=prev.next
            fast=fast.next
        return True



