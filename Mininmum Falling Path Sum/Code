class Solution:
    def minFallingPathSum(self, matrix: List[List[int]]) -> int:

        def helper(i,j):
            if i<0 or i>m-1 or j<0 or j>n-1:
                return float('inf')
            if i==m-1:
                return grid[i][j]
            if (i,j) in memo:
                return memo[(i,j)]
            pathsum=grid[i][j]+min(helper(i+1,j),helper(i+1,j-1),helper(i+1,j+1))
            memo[(i,j)]=pathsum
            return pathsum
        grid=matrix
        m=len(matrix)
        n=len(matrix[0])
        memo={}
        result=float('inf')
        for i in range(len(matrix)):
            result=min(result,helper(0,i))
        return result

        


        
