class Solution:
    def closedIsland(self, grid: List[List[int]]) -> int:

        l=[[0,+1],[0,-1],[+1,0],[-1,0]]
        @cache
        def helper(i,j):
            if (i==0 and grid[i][j]!=1) or (i==m-1 and grid[i][j]!=1) or (j==0 and grid[i][j]!=1) or (j==n-1 and grid[i][j]!=1):
                return False
            if (i,j) not in visited:
                visited.add((i,j))
                for a,b in l:
                    if grid[i+a][j+b]==0:
                        if helper(i+a,j+b)==True:
                            visited.add((i+a,j+b))
                        else:
                            return False
            return True



        #l=[[+1,0],[-1,0],[0,+1],[0,-1]]
        m=len(grid)
        n=len(grid[0])
        visited=set()
        ans=0
        for i in range(1,m):
            for j in range(1,n):
                if grid[i][j]==0 and (i,j) not in visited:
                    if helper(i,j):
                        ans+=1
        return ans 
