class Solution:
    def diagonalPrime(self, nums: List[List[int]]) -> int:
        
        
        def helper(n):
            prime_flag = 0

            if(n > 1):
                for i in range(2, int(sqrt(n)) + 1):
                    if (n % i == 0):
                        prime_flag = 1
                        break
                if (prime_flag == 0):
                    return True
                else:
                    return False
            else:
                return False
        
        n=len(nums)
        ans=0
        for i in range(n):
            if helper(nums[i][i])==True:
                ans=max(ans,nums[i][i])
            if helper(nums[i][n-1-i])==True:
                ans=max(ans,nums[i][n-i-1])
        return ans
                
        
